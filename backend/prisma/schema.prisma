// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model users {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  nickname String @unique
  gender String
  age Int
  height Int
  weight Int
  ex_frequency Int
  ex_level Level
  ex_goal String
  calorie Calorie[]
  ex_plans WorkoutDay[]
  calendar CalendarDay[]
  character Character[]
  music Music[]
}

model Calorie {
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  calorie_goal Int @default(0)
  carbs Int @default(0)
  protein Int @default(0)
  fat Int @default(0)
  user    users    @relation(fields: [userId], references: [id])
  userId  String   @db.ObjectId
}

model WorkoutDay {
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  day         String
  exercises   Exercise[]
  user    users    @relation(fields: [userId], references: [id])
  userId  String   @db.ObjectId
}

model Exercise {
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  exercise    String
  sets        Int
  reps        Int
  workoutDay  WorkoutDay @relation(fields: [workoutDayId], references: [id])
  workoutDayId String @db.ObjectId
}

model CalendarDay {
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  day         String
  stressIndex Int @default(0)
  doexercises  doExercise[]
  weight  Int?
  eatfood eatFood[]
  user    users    @relation(fields: [userId], references: [id])
  userId  String   @db.ObjectId
}

model Character {
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  characterImageUrl String 
  characterGifUrls  String[]
  user users @relation(fields: [userId], references: [id])
  userId String @db.ObjectId
}

model Music {
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  musicName String 
  musicUrls  String
  user users @relation(fields: [userId], references: [id])
  userId String @db.ObjectId
}

model doExercise {
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  exercise String
  sets Int
  reps Int
  CalendarDay  CalendarDay @relation(fields: [CalendarDayId], references: [id])
  CalendarDayId String @db.ObjectId
}

model eatFood {
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  mealType String
  food String
  calories Int
  carbs Int
  protein Int
  fat Int
  CalendarDay  CalendarDay @relation(fields: [CalendarDayId], references: [id])
  CalendarDayId String @db.ObjectId
}

enum Level {
  beginner
  middle
  expert
}